geom_point
claims_direction %>%
ggplot(mapping = aes(x = IND, y = RIDIT)) +
geom_point()
claims_direction %>%
ggplot(mapping = aes(x = IND, y = RIDIT)) +
geom_point() +
facet_wrap(~variable)
knitr::opts_chunk$set(echo = FALSE)
myRIDIT = claims[1:502,26:45]
myRIDIT
myRIDIT = claims[1:502,26:45]
myRIDIT
MyRiditPCA=princomp(~ ., data = myRidit, cor = TRUE)
myRIDIT = claims[1:502,26:45]
MyRiditPCA=princomp(~ ., data = myRidit, cor = TRUE)
myRidit = claims[1:502,26:45]
MyRiditPCA=princomp(~ ., data = myRidit, cor = TRUE)
summary(MyRiditPCA)
screeplot(MyRiditPCA)
screeplot(MyRiditPCA, type = "lines")
screeplot(MyRiditPCA)
screeplot(myRiditPCA)
myRidit = claims[1:502,26:45]
myRiditPCA=princomp(~ ., data = myRidit, cor = TRUE)
summary(myRiditPCA)
screeplot(myRiditPCA)
install.packages("FactoMineR")
library(FactoMineR)
library(FactoMineR)
source("http://factominer.free.fr/install-facto.r")
library(FactoMineR)
res.pca = PCA(auto[,6:25], scale.unit=TRUE, ncp=5, graph=T)
res.pca = PCA(claims[,6:25], scale.unit=TRUE, ncp=5, graph=T)
res.pca = PCA(claims[,6:25], scale.unit=TRUE, ncp=5, graph=T)
claims$CS2 <- as.factor(claims$CLAIM_SUSPICION_SCORE)
myData2 <- claims[c(6:25, 46)]
res.pca3 = PCA(myData2[1:21], scale.unit=TRUE, ncp=5, quali.sup=21, graph=T)
plotellipses(res.pca3,21)
knitr::opts_chunk$set(echo = FALSE)
claims <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Two Exercise/DAT 610 Auto Accident Personal Injury Claims-1.csv")
myData=claims[1:502,6:25]
rid=data.frame("RIDIT" = cbind("_01"= 2*(0 + 0.5*table(myData$IND_01)[1]/502) - 1,"i2"=2*(table(myData$IND_01)[1]/502 +
0.5*table(myData$IND_01)[2]/502) - 1,"i5"=2*(table(myData$IND_01)[1]/502 +
table(myData$IND_01)[2]/502+table(myData$IND_01)[3]/502+table(myData$IND_01)[4]/502+0.5*table(myData$IND_01)[5]/502) - 1))
rid
myData=claims[1:502,6:25]
rid=data.frame("RIDIT" = cbind("_01"= 2*(0 + 0.5*table(myData$IND_01)[1]/502) - 1,"i2"=2*(table(myData$IND_01)[1]/502 +
0.5*table(myData$IND_01)[2]/502) - 1,"i5"=2*(table(myData$IND_01)[1]/502 +
table(myData$IND_01)[2]/502+table(myData$IND_01)[3]/502+table(myData$IND_01)[4]/502+0.5*table(myData$IND_01)[5]/502) - 1))
rid
myData=claims[1:502,6:25]
rid=data.frame("RIDIT" = cbind("_01"= 2*(0 + 0.5*table(myData$IND_01)[1]/502) - 1,"i2"=2*(table(myData$IND_01)[1]/502 +
0.5*table(myData$IND_01)[2]/502) - 1,"i5"=2*(table(myData$IND_01)[1]/502 +
table(myData$IND_01)[2]/502+table(myData$IND_01)[3]/502+table(myData$IND_01)[4]/502+0.5*table(myData$IND_01)[5]/502) - 1))
rid
claims$CS2 <- as.factor(claims$CLAIM_SUSPICION_SCORE)
myData2 <- claims[c(6:25, 46)]
res.pca3 = PCA(myData2[1:21], scale.unit=TRUE, ncp=5, quali.sup=21, graph=T)
plotellipses(res.pca3,21)
claims <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Two Exercise/DAT 610 Auto Accident Personal Injury Claims-1.csv")
claims <- claims[!is.na(claims$Claim_Number),]
claims <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Two Exercise/DAT 610 Auto Accident Personal Injury Claims-1.csv")
claims <- claims[!is.na(claims$Claim_Number),]
knitr::opts_chunk$set(echo = FALSE)
claims %>%
select(IND_01, RIDIT_01) %>%
unique()
claims
claims %>%
select(IND_01, RIDIT_01) %>%
unique()
claims %>%
select(IND_01, RIDIT_01) %>%
unique() %>%
sort(IND_01)
claims %>%
select(IND_01, RIDIT_01) %>%
unique() %>%
sort(claims$IND_01)
claims %>%
select(IND_01, RIDIT_01) %>%
unique() %>%
sort(claims$IND_01, decreasing = FALSE)
claims %>%
select(IND_01, RIDIT_01) %>%
sort(claims$IND_01, decreasing = FALSE) %>%
unique()
claims %>%
select(IND_01, RIDIT_01) %>%
sort(IND_01, decreasing = FALSE) %>%
unique()
claims %>%
select(IND_01, RIDIT_01) %>%
arrange(IND_01, decreasing = FALSE) %>%
unique()
myData=claims[1:502,6:25]
rid=data.frame("RIDIT" = cbind("01_i1"= 2*(0 + 0.5*table(myData$IND_01)[1]/502) - 1,"O1_i2"=2*(table(myData$IND_01)[1]/502 +
0.5*table(myData$IND_01)[2]/502) - 1,"01_i5"=2*(table(myData$IND_01)[1]/502 +
table(myData$IND_01)[2]/502+table(myData$IND_01)[3]/502+table(myData$IND_01)[4]/502+0.5*table(myData$IND_01)[5]/502) - 1))
rid
knitr::opts_chunk$set(echo = FALSE)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(name = "Amount Claimed", breaks = c(5000,10000,15000,20000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(name = "Amount Claimed", breaks = c(5000,10000,15000,20000), labels = c(5000,10000,15000,20000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(name = "Amount Claimed", breaks = c(0,5000,10000,15000,20000), labels = c(5000,10000,15000,20000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(name = "Amount Claimed", breaks = c(0,5000,10000,15000,20000), labels = c(0,5000,10000,15000,20000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_light()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_light() +
scale_x_continuous()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_light() +
scale_x_discrete()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_light() +
scale_x_discrete("Amount Claimed", breaks = c(0,10000,20000,30000,40000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_discrete("Amount Claimed", breaks = c(0,10000,20000,30000,40000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_continuous(breaks = seq(0,100000, by = 10000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(0,100000, by = 10000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(0,100000, by = 10000)) +
scale_y_discrete(breaks = seq(0,100000, by = 10000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000))
max(claims$CLAIM_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000))
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000))
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000))
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000, labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000))
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
library(readr)
library(tidyverse)
library(FactoMineR)
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
max(claims$PAID_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
max(claims$CLAIM_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
max(claims$CLAIM_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = CLAIM_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
max(claims$CLAIM_AMOUNT)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = as.numeric(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = as.numeric(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point()
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete(breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_discrete("Amount Claimed", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_discrete("Amount Paid", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_continuous("Amount Claimed", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_continuous("Amount Paid", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_continuous("Amount Claimed", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_continuous("Amount Paid", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims <- claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_continuous("Amount Claimed", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_continuous("Amount Paid", breaks = seq(-1,99999, by = 10000), labels = seq(-1,99999, by = 10000))
claims <- claims %>%
mutate(CLAIM_AMOUNT = parse_number(CLAIM_AMOUNT)) %>%
mutate(PAID_AMOUNT = parse_number(PAID_AMOUNT))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_continuous("Amount Claimed", breaks = seq(-1,49999, by = 10000), labels = seq(-1,99999, by = 10000)) +
scale_y_continuous("Amount Paid", breaks = seq(-1,49999, by = 10000), labels = seq(-1,99999, by = 10000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
scale_x_continuous("Amount Claimed", breaks = seq(-1,49999, by = 10000), labels = seq(-1,49999, by = 10000)) +
scale_y_continuous("Amount Paid", breaks = seq(-1,49999, by = 10000), labels = seq(-1,49999, by = 10000))
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw()
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
xlim(0,100000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
xlim(0,50000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT, color = CLAIM_SUSPICION_SCORE)) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT, color = as.factor(CLAIM_SUSPICION_SCORE)) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT, color = as.factor(CLAIM_SUSPICION_SCORE))) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000)
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT, color = as.factor(CLAIM_SUSPICION_SCORE))) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000) +
theme(legend.position = "top")
claims %>%
ggplot(mapping = aes(x = CLAIM_AMOUNT, y = PAID_AMOUNT)) +
geom_point() +
theme_bw() +
xlim(0,50000) +
ylim(0,50000)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(tidyverse)
library(FactoMineR)
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(claims$Claim_Number),]
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$vehicle),]
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
vehicles
summary(model)
model <- princomp(~.,vehicles[1:75,3:8], na.action=na.omit)
model <- princomp(~.,vehicles[1:75,3:8], na.action=na.omit)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,iihs_data, na.action=na.omit)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,vehicles[1:75,3:8], na.action=na.omit)
iihs_data <- vehicles[1:75,3:8]
princomp(~.,vehicles[1:75,3:8], na.action=na.omit)
?princomp
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,vehicles[1:75,3:8], na.action=na.omit,cor=TRUE)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,vehicles, na.action=na.omit,cor=TRUE)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,data = vehicles, na.action=na.omit,cor=TRUE)
iihs_data <- vehicles[1:75,3:8]
model <- princomp(~.,data = vehicles[,3:8], na.action=na.omit,cor=TRUE)
library(readr)
library(tidyverse)
library(FactoMineR)
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
model <- princomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
model <- princomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
vehicles2 <- vehicles[1:75,3:8]
vehicles2
model <- prcomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
model <- prcomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
model <- princomp(~.,data = vehicles[1:75,3:8], na.action=na.omit)
model <- princomp(~.,data = vehicles, na.action=na.omit)
iihs_data <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
model <- princomp(~.,data = iihs_data[1:75,3-8], na.action=na.omit)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(tidyverse)
library(FactoMineR)
iihs_data <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
model <- princomp(~.,data = iihs_data[1:75,3-8], na.action=na.omit)
iihs_data <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
model <- princomp(~.,data = iihs_data[1:75,3-8], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75,3:8], na.action=na.omit)
model <- princomp(~.,iihs_data[,-1:2], na.action=na.omit)
model <- princomp(~.,iihs_data[,-1:-2], na.action=na.omit)
model <- princomp(~.,iihs_data[,c(-1,-2)], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75,c(-1,-2)], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75,3:8], na.action=na.omit)
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle)]
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
model <- princomp(~.,iihs_data[1:75,3:8], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75,3:8], na.action=na.omit)
model <- princomp(~.,iihs_data[,], na.action=na.omit)
model <- princomp(~.,iihs_data[1,], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75,], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75, 3:8], na.action=na.omit)
model <- princomp(~.,iihs_data[1:75, 3:8])
model <- princomp(~.,iihs_data[1:75, 3:8],cor = TRUE)
model <- princomp(~.,iihs_data[1:75, 3:8],cor = TRUE)
model <- princomp(~.,data = iihs_data)
model <- princomp(~ .,data = iihs_data)
myRidit = claims[1:502,26:45]
myRiditPCA=princomp(~ ., data = myRidit, cor = TRUE)
summary(myRiditPCA)
vehiclesPCA=princomp(~ ., data = vehicles, cor = TRUE)
model <- princomp(~ .,data = iihs_data)
vehiclesPCA=princomp(~ ., data = myRidit, cor = TRUE)
summary(model)
model=princomp(~ ., data = myRidit, cor = TRUE)
summary(model)
screeplot(model)
model=princomp(~ ., data = vehicles, cor = TRUE)
model=prcomp(~ ., data = vehicles, cor = TRUE)
model=princomp(vehicles[1:75,3:8])
model=princomp(na.omit(vehicles[1:75,3:8]))
summary(model)
screeplot(model)
View(vehiclesPCA)
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
model=princomp(na.omit(vehicles[1:75,3:8]))
summary(model)
screeplot(model)
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
vehicles <- read_csv("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/iihs_data.csv")
vehicles <- vehicles[!is.na(vehicles$Vehicle),]
library(readr)
library(tidyverse)
library(FactoMineR)
my_data <- vehicles %>%
data.frame(Collision., Property.damage., Comprehensive., Personal.injury., Medical.payment., Bodily.injury.)
my_data <- vehicles %>%
data.frame(Collision, Property.damage, Comprehensive, Personal.injury, Medical.payment, Bodily.injury)
my_data <- vehicles[,c('Collision', 'Property damage', 'Comprehensive', 'Personal injury', 'Medical payment', 'Bodily injury')]
my_data <- vehicles[,3:8]
vehicles$avgloss <- rowMeans(my_data, na.rm=TRUE)
vehicles
my_data <- vehicles[,3:8]
vehicles$avgloss <- rowMeans(my_data, na.rm=TRUE)
vehicles_tr <- transform(vehicles, Buy = as.numeric(vehicles$avgloss < 100))
vehicles
my_data <- vehicles[,3:8]
vehicles$avgloss <- rowMeans(my_data, na.rm=TRUE)
vehicles_tr <- transform(vehicles, Buy = as.numeric(vehicles$avgloss < 100))
vehicles_tr
my_data <- vehicles[,3:8]
vehicles$avgloss <- rowMeans(my_data, na.rm=TRUE)
vehicles_tr <- transform(vehicles, Buy = as.numeric(vehicles$avgloss < 100))
attach(vehicles_tr)
lm_model=lm(Buy ~ Collision. + Property.damage. + Comprehensive. + Personal.injury. + Medical.payment. + Bodily.injury.)
detach(vehicles_tr)
summary(lm_model)
attach(vehicles_tr)
lg_model=glm(Buy ~ Collision. + Property.damage. + Comprehensive. + Personal.injury. + Medical.payment. + Bodily.injury.,family = "quasibinomial",na.action=na.omit,control = list(maxit = 50))
detach(vehicles_tr)
summary(lg_model)
setwd("/home/msurdek/Documents/School/DAT 610 Optimization & Risk Assessment/Assignments/Module Six Exercise/")
